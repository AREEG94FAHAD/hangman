{"version":3,"sources":["component/images/1.png","component/images/2.png","component/images/3.png","component/images/4.png","component/images/5.png","component/images/6.png","component/images/7.png","component/images/8.png","component/images/9.png","component/images/10.png","component/images/11.png","component/ImagesCount.jsx","component/Buttons.jsx","component/PlayAgainn.jsx","component/SecretWord.jsx","component/GameStatus.jsx","component/Hint.jsx","component/Header.jsx","component/Hangman.jsx","App.js","reportWebVitals.js","index.js"],"names":["ImagesCount","props","imgs","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","src","this","counter","alt","width","Component","Button","disabled","status","className","onClick","letter","PlayAgainn","SecretWord","word","split","map","index","correctLetters","includes","GameStatus","gameStatus","Hint","Header","Hangman","state","UsedLetters","isLoaded","hint","fetch","then","res","json","result","setState","toString","error","giveHint","boolean","length","alert","forEach","checkWin","CheckLetter","newCounter","counterIncrease","utilities","generateLetters","btnLetter","Fragment","startNewGame","style","textAlign","min","max","Array","from","_","i","String","fromCharCode","App","useState","gameId","setGameId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,+BCA1B,MAA0B,+B,OCapBA,E,kDACjB,WAAYC,GAAO,uCACTA,G,0CAEV,WAEI,IAAMC,EAAM,CAACC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAMC,GAEhE,OAEO,qBAAKC,IAAKZ,EAAKa,KAAKd,MAAMe,SAAUC,IAAI,OAAOC,MAAM,Y,GAV3BC,aCVpBC,E,kDACnB,WAAYnB,GAAQ,uCACZA,G,0CAOR,WAAU,IAAD,OACP,OAEE,wBACCoB,SAAWN,KAAKd,MAAMqB,OACvBC,UAAW,eAAgBR,KAAKd,MAAMqB,OACtCE,QAAS,kBAAM,EAAKvB,MAAMuB,QAAQ,EAAKvB,MAAMwB,SAH7C,SAKCV,KAAKd,MAAMwB,a,GAjBkBN,aCDfO,E,kDACjB,WAAYzB,GAAO,uCACTA,G,0CAEV,WACI,OAEI,wBAAQuB,QAAST,KAAKd,MAAMuB,QAAUD,UAAU,WAAhD,4B,GAP4BJ,aCAnBQ,E,kDACjB,WAAY1B,GAAO,uCACTA,G,0CAIV,WAAU,IAAD,OACL,OACI,qBAAKsB,UAAU,UAAf,SAGIR,KAAKd,MAAM2B,KAAKC,MAAM,IAAIC,KAAI,SAACL,EAAQM,GAAT,OAC1B,EAAK9B,MAAM+B,eAAeC,SAASR,GAC/B,uBAAkBF,UAAU,eAA5B,cAA6CE,EAA7C,MAAWM,GACX,sBAAkBR,UAAU,iBAA5B,gBAAWQ,Y,GAdKZ,a,QCAnBe,E,4JAGjB,WACI,OACI,qBAAKX,UAAU,mBAAf,SAG6B,WAAxBR,KAAKd,MAAMkC,WACV,qBAAIZ,UAAU,UAAd,yBAAqCR,KAAKd,MAAMe,WACtB,OAAzBD,KAAKd,MAAMkC,WACR,qBAAIZ,UAAU,MAAd,mCAA2C,GAAKR,KAAKd,MAAMe,QAA3D,cACD,6CAAIO,UAAU,QAAYR,KAAKd,MAAMuB,WAArC,uBAAsD,uBAAtD,8C,GAZmBL,aCCnBiB,E,kDACjB,WAAYnC,GAAO,uCACTA,G,0CAKV,WAAU,IAAD,OAEL,OAEE,wBAAQsB,UAAU,MAClBC,QAAS,kBAAM,EAAKvB,MAAMuB,SAAQ,IADlC,uB,GAXwBL,aCDbkB,E,4JACjB,WACI,OACI,sBAAKd,UAAU,SAAf,UACM,qDACD,0DAA4B,mBAAGA,UAAU,UAAb,oBAA5B,qCAA+F,mBAAGA,UAAU,OAAb,qBAA/F,c,GALmBJ,aCUfmB,E,kDACjB,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IACDsC,MAAQ,CACRvB,QAAQ,GACTY,KAAK,GACNY,YAAY,GACZR,eAAe,GACfS,UAAS,EACTC,KAAM,IARM,E,qDAiBjB,WAAqB,IAAD,OAClBC,MAAM,uDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAEC,EAAKC,SAAS,CACZP,UAAU,EACVb,KAAMmB,EAAOE,gBAIjB,SAACC,GACC,EAAKF,SAAS,CACZP,UAAU,EACVS,MAAOA,S,oBAOnB,WAAU,IAAD,OAGCC,EAAW,SAACC,GAEd,GAAG,EAAKb,MAAMG,KAAKW,OAAO,GAAc,GAATD,EAC3BE,MAAM,gCAIV,IAP0B,eAOjBvB,GAEL,IAAIN,EAAS,EAAKc,MAAMX,KAAKG,GAE7B,IAAI,EAAKQ,MAAMP,eAAeC,SAASR,KAAY,EAAKc,MAAMG,KAAKT,SAASR,GAkBtE,OAfF,EAAKuB,UAAS,SAAAT,GAEV,MAAO,CAAEG,KADC,sBAAOH,EAAMG,MAAb,CAAmBjB,QAIjC,EAAKuB,UAAS,SAAAT,GAEV,MAAO,CAAEC,YADQ,sBAAOD,EAAMC,aAAb,CAA0Bf,QAI/C,EAAKuB,UAAS,SAAAT,GAEV,MAAO,CAACP,eADY,sBAAOO,EAAMP,gBAAb,CAA6BP,QAI7C,CAAN,WAtBDM,EAAQ,EAAGA,EAAQ,EAAKQ,MAAMX,KAAKyB,OAAQtB,IAAS,CAAC,IAAD,IAApDA,GAAoD,oCAsC3DI,EAAoC,IAAvBpB,KAAKwB,MAAMvB,QAAgB,OAT9B,WACZ,IAAIM,EAAO,MAMX,OALA,EAAKiB,MAAMX,KAAKC,MAAM,IAAI0B,SAAQ,SAAA9B,GAC1B,EAAKc,MAAMP,eAAeC,SAASR,KACnCH,EAAO,aAGRA,EAE6CkC,GAclDC,EAAc,SAAChC,GACE,WAAfU,GAAkD,IAAvB,EAAKI,MAAMvB,UAI1C,EAAKgC,UAAS,SAAAT,GAEV,MAAO,CAAEC,YADQ,sBAAOD,EAAMC,aAAb,CAA0Bf,QAK5C,EAAKc,MAAMX,KAAKK,SAASR,GACxB,EAAKuB,UAAS,SAAAT,GAEV,MAAO,CAACP,eADY,sBAAOO,EAAMP,gBAAb,CAA6BP,QApBrC,WACpB,IAAOiC,EAAW,EAAKnB,MAAMvB,QAAS,EACrC,EAAKgC,SAAS,CAAChC,QAAQ0C,IAqBjBC,KAYX,OACI,sBAAKpC,UAAU,SAAf,UAEI,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACKqC,EAAUC,gBAAgB,GAAG,KAAK/B,KAAI,SAAAL,GAAM,OACzC,cAAC,EAAD,CAEIA,OAAQA,EACRD,QAASiC,EACTnC,QAfHwC,EAeqBrC,EAdzB,EAAKc,MAAMC,YAAYP,SAAS6B,KAWpBrC,GAZT,IAACqC,OAoBT,sBAAKvC,UAAU,SAAf,UAEE,sBAAKA,UAAU,gBAAf,UAEQR,KAAKwB,MAAME,SAET,eAAC,IAAMsB,SAAP,WACI,cAAC,EAAD,CAAYnC,KAAMb,KAAKwB,MAAMX,KAAMI,eAAgBjB,KAAKwB,MAAMP,iBAC9D,cAAC,EAAD,CAAYG,WAAYA,EAAYnB,QAASD,KAAKwB,MAAMvB,QAASQ,QAAS2B,OAHhF,wDAMN,sBAAK5B,UAAU,gBAAf,UACI,cAAC,EAAD,CAAWC,QAAST,KAAKd,MAAM+D,eAC/B,cAAC,EAAD,CAAOxC,QAAS2B,EAAUT,KAAM3B,KAAKwB,MAAMG,aAK/C,qBAAKnB,UAAU,QAAQ0C,MAAO,CAACC,UAAU,SAAzC,SAEA,cAAC,EAAD,CAAalD,QAASD,KAAKwB,MAAMvB,sB,GArKhBG,aAwL/ByC,EAAU,CACZC,gBAAiB,SAACM,EAAKC,GAAN,OAAcC,MAAMC,KAAK,CAAEjB,OAAQe,EAAMD,EAAM,IAAK,SAACI,EAAGC,GAAJ,OAAUC,OAAOC,aAAaP,EAAMK,QClL9FG,MAbf,WAAgB,IAAD,EACcC,mBAAS,GADvB,mBACNC,EADM,KACEC,EADF,KAGb,OACE,qBAAKvD,UAAU,MAAf,SAEE,cAAC,EAAD,CAAsByC,aAAc,kBAAMc,EAAUD,EAAQ,KAA9CA,MCALE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c0be1a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.d2ab17c7.png\";","export default __webpack_public_path__ + \"static/media/2.8ddba295.png\";","export default __webpack_public_path__ + \"static/media/3.aa15d90d.png\";","export default __webpack_public_path__ + \"static/media/4.9e052ca4.png\";","export default __webpack_public_path__ + \"static/media/5.6ca91d92.png\";","export default __webpack_public_path__ + \"static/media/6.1c1e1d25.png\";","export default __webpack_public_path__ + \"static/media/7.87469b88.png\";","export default __webpack_public_path__ + \"static/media/8.25ddebdf.png\";","export default __webpack_public_path__ + \"static/media/9.3994afb0.png\";","export default __webpack_public_path__ + \"static/media/10.abb41d9a.png\";","export default __webpack_public_path__ + \"static/media/11.efb457dc.png\";","import React, { Component } from 'react'\nimport img1 from \"./images/1.png\"\nimport img2 from \"./images/2.png\"\nimport img3 from \"./images/3.png\"\nimport img4 from \"./images/4.png\"\nimport img5 from \"./images/5.png\"\nimport img6 from \"./images/6.png\"\nimport img7 from \"./images/7.png\"\nimport img8 from \"./images/8.png\"\nimport img9 from \"./images/9.png\"\nimport img10 from \"./images/10.png\"\nimport img11 from \"./images/11.png\"\n\nexport default class ImagesCount extends Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n    \n        const imgs= [img1,img2,img3,img4,img5,img6,img7,img8,img9,img10,img11]\n       \n        return (\n          \n               <img src={imgs[this.props.counter]} alt=\"img1\" width=\"200\"/>\n             \n           \n        )\n    }\n}\n","import React, { Component } from \"react\";\n\n\nexport default class Button extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n \n\n\n  render() {\n    return (\n    \n      <button\n       disabled={ this.props.status}\n      className={\"buttonStyle \"+ this.props.status}\n      onClick={() => this.props.onClick(this.props.letter)}\n      >\n      {this.props.letter}\n     \n    </button>\n  \n      \n    \n       \n     \n     \n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class PlayAgainn extends Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n        return (\n            \n            <button onClick={this.props.onClick}  className=\"btn blue\" >Play Again</button>\n           \n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class SecretWord extends Component {\n    constructor(props){\n        super(props)\n    }\n   \n   \n    render() {\n        return (\n            <div className=\"letters\">\n          \n            {\n                this.props.word.split(\"\").map((letter, index) =>\n                    this.props.correctLetters.includes(letter)\n                    ?   <span key={index} className=\"lettersKnwn \"> {letter} </span>\n                    :   <span key={index} className=\"lettersNotKnw \" > ? </span>\n                    \n                    )\n        \n        \n        \n            }\n\n              \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class GameStatus extends Component {\n\n\n    render() {\n        return (\n            <div className=\"grid-col mt-10px\">\n                \n               {\n                (this.props.gameStatus==='active')\n                ? <h2 className=\"trailes\">Tries Left: {this.props.counter}</h2> \n                : (this.props.gameStatus == \"win\")\n                    ? <h1 className=\"win\">You Won the Game with {11 - this.props.counter} try(s)!</h1>\n                    :<h1 className=\"lose\"  {...this.props.onClick()}>  RIP!<br></br> Better Luck in the next life.   </h1>\n\n               }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n\nexport default class Hint extends Component {\n    constructor(props){\n        super(props)\n    }\n\n \n\n    render() {\n   \n        return (\n      \n          <button className=\"btn\" \n          onClick={() => this.props.onClick(true)}\n          > Hint \n          </button>\n\n          \n        \n\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                  <h1> The Hangman Game !</h1>\n                 <p> Find the letters in the <b className=\"trailes\">Secret</b> word or the human is going to be <b className=\"lose\">Hanged.</b> </p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ImagesCount from \"./ImagesCount\"\nimport Buttons from \"./Buttons\";\nimport PlayAgain from \"./PlayAgainn\"\nimport SecretWord from \"./SecretWord\";\nimport GameStatus from \"./GameStatus\";\nimport Hint from \"./Hint\";\nimport Header from \"./Header\";\n\n\n\n//I need to do the game status\nexport default class Hangman extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n             counter:10,\n            word:\"\",\n           UsedLetters:[],\n           correctLetters:[],\n           isLoaded:false,\n           hint: []\n\n        };\n        \n      }\n\n     \n\n\n      componentDidMount() {\n        fetch(\"https://random-word-api.herokuapp.com/word?number=1\")\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              \n              this.setState({\n                isLoaded: true,\n                word: result.toString()\n\n              });\n            },\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error: error\n              });\n            }\n          );\n      }\n      \n    \n    render() {\n      \n\n        const giveHint = (boolean) => {\n           \n            if(this.state.hint.length>1 && boolean==true){\n                alert(\"You only have two hints\");\n                return\n            }\n\n            for (let index = 0; index < this.state.word.length; index++) {\n              \n                let letter = this.state.word[index];\n               \n                if(!this.state.correctLetters.includes(letter) && !this.state.hint.includes(letter)){\n                    \n\n                    this.setState(state => {\n                        const hint = [...state.hint, letter];\n                        return { hint,};\n                    });\n\n                    this.setState(state => {\n                        const UsedLetters = [...state.UsedLetters, letter];\n                        return { UsedLetters,};\n                    });\n\n                    this.setState(state => {\n                        const correctLetters = [...state.correctLetters, letter];\n                        return {correctLetters,};\n                    });\n        \n                      return\n                   \n                }\n            }\n        }\n\n        \n        const checkWin =()=>{\n            let status=\"win\";\n            this.state.word.split(\"\").forEach(letter =>{\n                if(!this.state.correctLetters.includes(letter)){\n                    status=\"active\"\n                }\n            })\n            return status;\n        }\n        const gameStatus = this.state.counter === 0 ? 'Lost'  : checkWin();\n\n        \n     \n\n\n        //when the letter is wrong the counter increases\n        const counterIncrease = () => {\n            const  newCounter=this.state.counter -1 \n             this.setState({counter:newCounter})  \n        }\n\n\n            //checking the letter if it is correct or worng / adding it to the used array\n        const CheckLetter = (letter)=>{\n            if (gameStatus !== 'active' || this.state.counter === 0)  \n                return;\n            \n            //it addes the letter to the USEDLETTERS array in the state \n            this.setState(state => {\n                const UsedLetters = [...state.UsedLetters, letter];\n                return { UsedLetters,};\n            });\n\n            //if the word includes the letter we add the letter to our correct letters list\n            if(this.state.word.includes(letter)){\n                this.setState(state => {\n                    const correctLetters = [...state.correctLetters, letter];\n                    return {correctLetters,};\n                });\n            }else{ counterIncrease(); }\n\n        }\n\n\n\n        //checking and returning btn status\n        const btnStatus=(btnLetter)=>{\n            return  (this.state.UsedLetters.includes(btnLetter));  ;\n        }\n\n        \n        return (\n            <div className=\"grid-1\">\n            \n                <Header />\n                <div className=\"buttons\">\n                    {utilities.generateLetters(97,122).map(letter =>\n                        <Buttons \n                            key={letter}\n                            letter={letter} \n                            onClick={CheckLetter} \n                            status={btnStatus(letter)}\n                        />\n                    )}\n                </div>\n                \n                <div className=\"grid-2\" >\n                   \n                  <div className=\"grid-col mt-1\">\n                    {\n                        (!this.state.isLoaded)\n                        ? <div>Looking for a Word...</div>\n                        :   <React.Fragment>\n                                <SecretWord word={this.state.word} correctLetters={this.state.correctLetters}/>\n                                <GameStatus gameStatus={gameStatus} counter={this.state.counter} onClick={giveHint}/>\n                            </React.Fragment>\n                    } \n                    <div className=\"d-inline mt-2\">\n                        <PlayAgain onClick={this.props.startNewGame}  />\n                        <Hint  onClick={giveHint} hint={this.state.hint} />\n                    </div>\n                    </div>     \n                    \n                    \n                    <div className=\"right\" style={{textAlign:\"right\"}}>\n                    \n                    <ImagesCount counter={this.state.counter}/>\n                    </div>\n                   \n            \n                </div>\n                        \n                \n              \n               \n            </div>\n        )//END OF RETURN \n    }//END OF RENDER \n}//END OF CLASS\n\n\n\n\n\n\nconst utilities={\n    generateLetters: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => String.fromCharCode(min + i)),\n\n}","\nimport './App.css';\n\nimport  React, { useState } from 'react';\nimport Hangman from \"./component/Hangman\";\n\nfunction App() {\n  const [gameId, setGameId]= useState(1)\n  \n  return (\n    <div className=\"App\">\n    \n      <Hangman key={gameId} startNewGame={() => setGameId(gameId +1)} />\n    </div>\n  );\n}\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}